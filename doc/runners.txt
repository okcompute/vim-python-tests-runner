*runners.txt*	 For Vim version 7.4	 Last change: 2014 December 4th

An improved vim compiler for *running* tests.

Author:  Pascal Lalancette <okcompute@icloud.com>
License: Same terms as Vim itself (see |license|)

==============================================================================
CONTENTS                                               *runners-contents*

    1. Introduction.................................|runners-intro|
    2. Requirements.................................|runners-requirements|
    3. Python virtualenv............................|runners-virtualenv|
    4. Commands.....................................|runners-commands|
    5. About........................................|runners-about||

==============================================================================
INTRODUCTION                                            *runners*

This plugin improve on Vim compiler option for running tests.

Main features:

    -   Isolate tests running session. Run a specific test, a test case, a test
        module or all tests inside a git repository.
    -   Memorize last test ran. The last test will run if commands are called
        in `non-test` source file.
    -   Improved Vim *errorformat* detection. *quickfix* window will show the
        correct error lines (surprisingly, it was not intuitive as one would
        think to enable!)

==============================================================================
REQUIREMENTS                                            *runners-requirements*

For this plugin to have some values, you need this requirements to be
installed in your environment:
    -   Python 2.7

These requirement are optional but improve the plugin usage:
    -   git
    -   {vim-dispatch} by Tim Pope to run tests asynchronously
        (https://github.com/tpope/vim-dispatch).

==============================================================================
SUPPORTED TEST RUNNERS                                  *runners-python*

    - Python
        * nose (http://nose.readthedocs.org)
        * pytest (http://pytest.org)

==============================================================================
PYTHON                                                  *runners-python*


The plugin needs to be aware of *Python* virtual environment required to run
tests (if any).

------------------------------------------------------------------------------
1. virtualenv~
                                                        *runners-virtualenv*

To discover {virtualenv}, the plugin will look into three places (in order):
    1. runners-config-file| The plugin configuration file.
    2. |runners-config-git| An option configured in git.
    3. $VIRTUALENV environment variable

If none of these are available, tests will be ran in system environment.

------------------------------------------------------------------------------
2. Select Python runner~

                                                         *'g:runners_python'*
To select runner for *Python* , use this global option:
default:
    let g:runners_python = 'nose'


==============================================================================
CONFIGURATION                                           *runners-configuration*

                                                        *runners-config-file*
1. Configuration file~

Expected configuration filename is *.runners*. It should be located at the
root of the project.

Example: Set Python {virtualenv} configuration in project X , at the
root of the project:

 \.runners          <= vim-runners config file
 \venv              <= {virtualenv} folder
 \source.py
 \test.py

The content of the file would simply be :
python-virtualenv = .venv


                                                        *runners-config-git*
2. Git configuration~

If you don't want to have extra file polluting your project, a local git
configuration can be used.

For example, to configure Python {virtualenv} folder which is located at \{git
root}\venv:

    git config --local vim-runners.python-virtualenv venv

==============================================================================
COMMANDS                                                *runners-commands*

These commands are available only for file types with registered runners.

                                                        *runners-:RunTest*
:RunTest                Run the current test surrounding the cursor position.
                        Otherwise, run all tests in the scope the cursor is
                        located in (i.e. test case or module).

                                                        *runners-:RunTest!*
:RunTest!               Like |:RunTest| but will start an interactive shell
                        instead of running in the background. This is useful
                        for debugging your test or program (ex.: pdb or ipdb).

                                                        *runners-:RunCase*
:RunCase                Run all tests found in the test case surrounding the
                        cursor position. If cursor is outside a test case
                        scope, all tests for the module (buffer) are run.

                                                        *runners-:RunCase!*
:RunCase!               Like |:RunCase| but will start an interactive shell
                        instead of running in the background. This is useful
                        for debugging your test or program (ex.: pdb or ipdb).

                                                        *runners-:RunModule*
:RunModule              Run all tests found in the current module (buffer).

                                                        *runners-:RunModule!*
:RunModule!             Like |:RunModule| but will start an interactive shell
                        instead of running in the background. This is useful
                        for debugging your test or program (ex.: pdb or ipdb).

                                                        *runners-:RunAll*
:RunAllTests            Run all tests found in the git repository of the
                        edited buffer.

                                                        *runners-:RunAll!*
:RunAllTests!           Like |:RunAll| but will start an interactive shell
                        instead of running in the background. This is useful
                        for debugging your test or program (ex.: pdb or ipdb).

==============================================================================
RUNNING LAST TEST                                       *runners-last-test*

The plugin will *memorize* the last test, case or module used for these three commands:

    |:RunTest|
    |:RunCase|
    |:RunModule|

If any of these commands are called outside of a test source file, the last
test, case or module will be used. This is really useful for example when
doing TDD. You write the test. Call `:RunTest`. It fails. Switch focus to
source file. Add code. Call `:RunTest`. etc.


==============================================================================
ABOUT                                                   *runners-about*

Grab the latest version or report a bug on GitHub:

http://github.com/okcompute/vim-runners

 vim:tw=78:et:ft=help:norl:
